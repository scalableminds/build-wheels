name: pylibCZIrw

on:
  push:
  workflow_dispatch:
    inputs:
      pylibczirwVersion:
        description: "pylibCZIrw version"
        required: true
        default: "4.1.1"
      cibwVersion:
        description: "cibuildwheel version"
        default: "2.18.1"

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      CIBW_BUILD: "cp312-* cp38-* cp39-* cp310-* cp311-*"
      CIBW_VERSION: ${{ inputs.cibwVersion || '2.18.1'}}
      PYLIBCZIRW_VERSION: ${{ inputs.pylibczirwVersion || '4.1.1'}}
    strategy:
      matrix:
        # macos-13 is an intel runner, macos-14 is apple silicon
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]
      fail-fast: false
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Download pylibCZIrw
        run: |
          git clone -b debug https://github.com/brokkoli71/pylibCZIrw-4.1.1.git
          mv pylibCZIrw-4.1.1 pylibCZIrw
        #run: |
        #  curl -o pypi.json "https://pypi.org/pypi/pylibczirw/${PYLIBCZIRW_VERSION}/json"
        #  URL=$(python -c "import json, sys; print([u for u in json.load(sys.stdin)['urls'] if u['url'].endswith('.tar.gz')][0]['url'])" < pypi.json)
        #  curl -o pylibCZIrw.tar.gz $URL
        #  tar -xvf pylibCZIrw.tar.gz
        #  mv pylibCZIrw-${PYLIBCZIRW_VERSION} pylibCZIrw

      - name: Fix cmake for Mac
        if: ${{ matrix.os == 'macos-13' ||  matrix.os == 'macos-14'}}
        run: |
          sed -i '' 's/CMAKE_OSX_DEPLOYMENT_TARGET "10.9"/CMAKE_OSX_DEPLOYMENT_TARGET "12.0"/g' pylibCZIrw/CMakeLists.txt
          sed -i '' 's/ENDIF(APPLE)/ set(CMAKE_OSX_ARCHITECTURES "x86_64;arm64" CACHE STRING "Architectures for OS X" FORCE)\r\nENDIF(APPLE)/g' pylibCZIrw/CMakeLists.txt


      - name: Build wheels
        uses: pypa/cibuildwheel@v2.18.1
        env:
          CIBW_PROJECT_REQUIRES_PYTHON: ">=3.8"
        with:
           package-dir: ./pylibCZIrw
           output-dir: wheelhouse
           config-file: "pyproject.toml"

      - name: Debugging with tmate
        if: ${{ matrix.os == 'macos-13' ||  matrix.os == 'macos-14'}}
        uses: mxschmitt/action-tmate@v3.18

      - name: Fix platform tags for Mac
        if: ${{ matrix.os == 'macos-13' ||  matrix.os == 'macos-14'}}
        run: |
          for f in ./pylibCZIrw/wheelhouse/*.whl ; do mv $f ${f//macosx_12_0/macosx_10_9} ; done


      - uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./pylibCZIrw/wheelhouse/*.whl


  publish:
    name: Publish wheels to pypi.scm.io
    needs: [build_wheels]
    runs-on: ubuntu-latest
    steps:
      - name: Get wheels
        uses: actions/download-artifact@v3
        with:
          name: wheels
          path: dist

      - name: Publish to pypy.scm.io
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: ${{ secrets.PYPI_SCM_USERNAME }}
          password: ${{ secrets.PYPI_SCM_PASSWORD }}
          repository-url: https://pypi.scm.io/simple/
          skip-existing: true

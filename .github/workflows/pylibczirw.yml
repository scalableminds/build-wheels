name: pylibCZIrw

on: [push, pull_request, workflow_dispatch]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Download pylibCZIrw
        env: 
          PYLIBCZIRW_VERSION: "3.4.0"
        shell: bash
        run: |
          pip install requests

          echo "import requests" > download.py
          echo "pypi_info = requests.get(\"https://pypi.org/pypi/pylibczirw/${PYLIBCZIRW_VERSION}/json\").json()" >> download.py
          echo "url = [u for u in pypi_info['urls'] if u['url'].endswith('.tar.gz')][0]['url']" >> download.py
          echo "buf = requests.get(url).content" >> download.py
          echo "with open('pylibCZIrw.tar.gz', 'wb') as f:" >> download.py
          echo "  f.write(buf)" >> download.py

          python download.py
          tar -xvf pylibCZIrw.tar.gz
          mv pylibCZIrw-${PYLIBCZIRW_VERSION} pylibCZIrw

      # Used to host cibuildwheel
      - uses: actions/setup-python@v3

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.12.3

      - name: Fix cmake for Mac
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          sed -i s/CMAKE_OSX_DEPLOYMENT_TARGET "10.9"/CMAKE_OSX_DEPLOYMENT_TARGET "12.0"/g pylibCZIrw/CMakeLists.txt

      - name: Build wheels
        env:
          CIBW_BEFORE_BUILD: "pip install numpy==1.23.5"
          CIBW_BUILD: "cp38-* cp39-* cp310-* cp311-*"
          CIBW_SKIP: "*-musllinux*"
          CIBW_ARCHS_MACOS: "universal2"
          CIBW_ARCHS_LINUX: "x86_64"
          CIBW_ARCHS_WINDOWS: "AMD64"
        run: |
          cd pylibCZIrw
          python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v3
        with:
          path: ./pylibCZIrw/wheelhouse/*.whl